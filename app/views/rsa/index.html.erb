
<!--This file created 10/12/97 10:53 PM by Claris Home Page version 2.0-->
<HTML>
<HEAD>
   <TITLE>RSA Calculator</TITLE>

<SCRIPT Language="JavaScript">
<!-- Hide from uneducated browsers
	//----------------------------------------------------------------------
	
		function mod( m, n )
		{			
			return m - n*Math.floor(m/n)
		}
	
	//----------------------------------------------------------------------
	
		function OldPowerMod(x,n,m)
		// Compute x^n mod m
		{
			var p = 1
			for ( i=0; i<n; i++ )
				p = mod( (p*x),m )
			return p
		}
	  
	//----------------------------------------------------------------------
	
		function PowerMod(x,p,N)
		// Compute x^p mod N
		{
			var A = 1
			var m = p
			var t = x
			
			while( m > 0 )
			{
				k = Math.floor( m/2 )
				r = m - 2*k
				if( r == 1 )
					A = mod( A*t, N )
				t = mod( t*t, N )
				m = k
			}			
			return A
		}
	  
	//----------------------------------------------------------------------
	
		function Factorize(n)
		{
			var temp = ""
			var T = n
			var PRIME = 1
			
			var i=1
			while( (T>1) && ( ++i < Math.sqrt(n)+1 ) )
			{
				while ( mod(T,i)==0 )
				{
					T = T/i
					if( PRIME == 0 ) temp += "*"
					if( PRIME == 1 ) PRIME = 0
					temp += i
				}
			}
			
			if( PRIME == 1 ) 
				temp = " is prime."
			else if( T>1 )
				temp += "*" + T
				
			return temp
		}
		
	//----------------------------------------------------------------------
	
		function GCD(m,n)
		{
			while( m != n )
			{
				if( m == 1 || n == 1)
					return 1
				else if ( m < n )
					n = mod(n,m)
				else
					m = mod(m,n)
			}	
			return m
		}
		
	//----------------------------------------------------------------------
	
		function Candidates(form)
		{
			var temp = ""           // Arithmetic is done with -r rather
			var r = -form.r.value   // than r since "+" gets interpreted
			var n = - (r-1)         // as a string operator, not arithmetic.
			var line = ""
			
			for( i=0; i<30; i++ )
			{
				if (line.length > 50)
				{
					temp += line + "\n"
					line = ""
				}
				line += n + " "
				n = n - r
			}
			
			return temp + line
		}

	//----------------------------------------------------------------------
	
		function ComputeNr(form)
		{
			var p = form.p.value
			var q = form.q.value
			form.N.value = p*q
			form.r.value = (p-1)*(q-1)
			form.ed.value = Candidates(form)
			return ""
		}

	//----------------------------------------------------------------------
	
		function ComputeED(form)
		{
			form.factors.value = Factorize(form.K.value)
			return ""
		}

	//----------------------------------------------------------------------
	
		function CheckED(form)
		{
			var temp = ""
			var e = form.e.value
			var d = form.d.value
			var r = form.r.value
			var N = form.N.value
			
			temp += "      e   = " + e + "\n"
			temp += "      d   = " + d + "\n"
			temp += "      N   = " + N + "\n"
			temp += "      r   = " + r + "\n"
			temp += "      e*d = " + eval(e*d) + "\n"
			temp += "e*d mod r = " + mod((e*d),r) + "\n"

			if( GCD(e,r) == 1 ) 
				temp += "e and r are relatively prime\n"
			else
				temp += "e and r are not relatively prime; gcd(e,r) = " + GCD(e,r) + "\n"

			if( GCD(d,r) == 1 ) 
				temp += "d and r are relatively prime\n"
			else
				temp += "d and r are not relatively prime; gcd(d,r) = " + GCD(d,r) + "\n"

			form.checker.value = temp
			return ""
		}

		function CheckCode(form)
		{
			var temp = ""
			var e = form.e.value
			var d = form.d.value
			var N = form.N.value
			var M = form.Msg.value

			form.Cipher.value = PowerMod(M,e,N)
			
			var C = form.Cipher.value
			form.Decipher.value = PowerMod(C,d,N)

			return ""
		}

	// end hiding from uneducated browsers -->
</SCRIPT>

</HEAD>

<BODY>

<H1>RSA Calculator</H1>
JL Popyack, October 1997

<HR>
	
This guide is intended to help with understanding the workings of the 
RSA Public Key Encryption/Decryption scheme.  No provisions are made for
high precision arithmetic, nor have the algorithms been encoded for efficiency
when dealing with large numbers.  


<FORM action="" method="POST">

	<B>Step 1. Compute N as the product of two prime numbers p and q:</B>

	<BLOCKQUOTE>
	<P><B>p</B> <INPUT TYPE="text" NAME="p" VALUE="" SIZE=15>  <!- MAXLENGTH=10 ->
	<P><B>q</B> <INPUT TYPE="text" NAME="q" VALUE="" SIZE=15>

	<P>Enter values for <B>p</B> and <B>q</B> then click this button: 
	<B><INPUT TYPE="button" NAME="pqNr" VALUE="Set p, q" onclick="ComputeNr(this.form)"></B>
	
	<HR>
	
	The values of <B>p</B> and <B>q</B> you provided yield a modulus <B>N</B>, and also a 
	number <B>r</B>=(p-1)(q-1), which is very important.  You will need to find two
	numbers <B>e</B> and <B>d</B> whose product is a number equal to <B>1 mod r</B>.  
	Below appears a list of some numbers which equal <B>1 mod r</B>.  
	You will use this list in Step 2.
	
	<P><B>N = p*q</B> <INPUT TYPE="text" NAME="N" VALUE="" SIZE=15>  <!- MAXLENGTH=10 ->
	<P><B>r = (p-1)*(q-1)</B><INPUT TYPE="text" NAME="r" VALUE="" SIZE=15>
	<P><B>Candidates (1 mod r):</B> <TEXTAREA NAME="ed" ROWS=4 COLS=60 ></TEXTAREA>
	</BLOCKQUOTE>	
	
	<HR>
	
	<P><B>Step 2. Find a number equal to 1 mod r which can be factored:</B>

	<BLOCKQUOTE>
	<P><B>K <INPUT TYPE="text" NAME="K" VALUE="" SIZE=15></B>
	
	<P>Enter a candidate value <B>K</B> in the box, then click this button to factor it: 
	<B><INPUT TYPE="button" NAME="ed2" VALUE="Factor K" onclick="ComputeED(this.form)"></B>
	
	<HR>
	
	<P><B>factors of K: <INPUT TYPE="text" NAME="factors" VALUE="" SIZE=25></B>
	</BLOCKQUOTE>	
	
	<HR>
	
	<P><B>Step 3. Find two numbers e and d 
	              that are relatively prime to N
	              and for which e*d = 1 mod r:</B>

	<BLOCKQUOTE>
	<P>Use the factorization info above to factor <B>K</B> into two numbers,
	<B>e</B> and <B>d</B>.  
	Click button to check correctness: 
	<B><INPUT TYPE="button" NAME="ed3" VALUE="Check e & d" onclick="CheckED(this.form)"></B>

	<P><B>e <INPUT TYPE="text" NAME="e" VALUE="" SIZE=15></B>
	<P><B>d <INPUT TYPE="text" NAME="d" VALUE="" SIZE=15></B>
	<P><B>Consistency check:</B> <TEXTAREA NAME="checker" ROWS=9 COLS=60 ></TEXTAREA>
	
	<P>
	If your choices of e and d are acceptable, you should see the messages, 
	"e*d mod r = 1", 
	"e and r are relatively prime", and "d and r are relatively prime" 
	at the end of this box.
	</BLOCKQUOTE>	


	<HR>
		
	<P><B>Step 4. Use e and d to encode and decode messages:</B>

	<BLOCKQUOTE>
	<P>Enter a message (in numeric form) here.  Click button to encode.
	Break your message into small chunks so that the "Msg" codes are not larger
	than <B>N</B>.
	 
	(See <A HREF = "ASCII.html">ASCII Code Chart</A> for ASCII code equivalences.)
	
	 
	<P><B><INPUT TYPE="button" NAME="ed4" VALUE="Encode/Decode" onclick="CheckCode(this.form)"></B>

	<P><B>Msg    <INPUT TYPE="text" NAME="Msg" VALUE="" SIZE=15></B>
	<P><B>Encrypted <INPUT TYPE="text" NAME="Cipher" VALUE="" SIZE=15></B>
	Cipher = (Msg)<SUP>e</SUP> mod N
	<P><B>Decrypted <INPUT TYPE="text" NAME="Decipher" VALUE="" SIZE=15></B>
	Msg = (Cipher)<SUP>d</SUP> mod N
	</BLOCKQUOTE>	
	
</FORM>
</BODY>
</HTML>

